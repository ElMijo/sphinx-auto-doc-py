#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os, sys,  optparse, inspect
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../'))
from sphinxdoc.helpers.mensajes import Alerta, InterfazUsuario
from sphinxdoc.helpers.utilitarios import raw_input_yes_no
from sphinxdoc.sphinxdoc import SphinxDocProjecto
from  types import FunctionType, ClassType


alert = Alerta()
ui = InterfazUsuario()
# try:
#     import sphinxdoc
# except Exception, e:
#     sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../../'))
# finally:
#from ..helpers.utilitarios import obtener_mensaje

def definir_argumentos():
    """Permite Definir las opciones del comando"""
    parser = optparse.OptionParser(usage="""uso: %prog [opciones] <project path> [exclude paths, ...]""")

    return parser

def info(id_mensaje,data=[]):
    print ui.mensaje(id_mensaje,data,color='cyan',estilo='bold')

def run_sequence(handler, id_mensaje, param=[], param_mensaje=[]):

    run = False

    info(id_mensaje,param_mensaje)

    if isinstance(handler, list) and hasattr(handler[0], '__class__') and hasattr(*handler):
        run = getattr(handler[0],handler[1])(*param)

    elif isinstance(handler, str) and type(globals()['algo']) == FunctionType:
        run = globals()[handler](*param)

    return run




def main():
    """Funci√≥n principal a ejecutarce al llamar el comando"""

    argumentos = definir_argumentos()
    (opts, args) = argumentos.parse_args()

    if not args:
        alert.warning("msj001")
    else:
        ruta_proyecto = args[0]
        info("msj004", [ruta_proyecto])
        if os.path.isdir(ruta_proyecto):
            proyecto = SphinxDocProjecto(ruta_proyecto)

            if run_sequence([proyecto,'respaldar'],"msj005"):

                run_sequence([proyecto,'generar_docstring_rst'],"msj006")
                run_sequence([proyecto,'generar_api_doc'],"msj007")
                run_sequence([proyecto,'agregar_package_path_to_conf_doc'],"msj008",param_mensaje=[proyecto.__package_name__])
                run_sequence([proyecto,'agregar_plugins_to_conf_doc'],"msj009",param_mensaje=[proyecto.__package_name__])
                run_sequence([proyecto,'eliminar_epub_to_config_doc'],"msj010",param_mensaje=[proyecto.__package_name__])

                if raw_input_yes_no(ui.mensaje("msj011")):
                    run_sequence([proyecto,'agregar_sphinx_rtd_theme'],"msj014")

                run_sequence([proyecto,'agregar_modules_rst'],"msj012")
                run_sequence([proyecto,'generar_html_doc'],"msj013")
                run_sequence([proyecto,'open_html_doc'],"msj015")

                alert.success("msj016")

            else:
                alert.warning("msj003",proyecto.abspath)
        else:
            alert.error("msj002",proyecto.abspath)   

if __name__ == '__main__':
    main()